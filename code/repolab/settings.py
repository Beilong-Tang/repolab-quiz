"""
Django settings for repolab project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-39t7sql+@br=8jfsx1%zhuxqe#zh#s71)6_0v+6$2nxt5hj@(#'

# SECURITY WARNING: don't run with debug turned on in production!
'''
try:
    DEBUG = os.environ["DEBUG"]
    ALLOWED_HOSTS = os.environ["ALLOWED_HOSTS"].split()
except KeyError:
    print("[ERROR] Django: Cannot get env settings")
    raise KeyError

'''
DEBUG=True
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'simple_judge.apps.SimpleJudgeConfig',
    'quiz.apps.QuizConfig',
    'quiz.templatetags.my_tags'
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'repolab.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'repolab.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

'''
try:
    DATABASE = os.environ["DATABASE"]
    # Only for MongoDB
    DB_NAME = os.environ["DB_NAME"]
    ENFORCE_SCHEMA = os.environ["ENFORCE_SCHEMA"]
    HOST = os.environ["HOST"]
    PORT = int(os.environ["PORT"])
    USERNAME = os.environ["USERNAME"]
    PASSWORD = os.environ["PASSWORD"]
    AUTH_SOURCE = os. environ["AUTH_SOURCE"]
    AUTH_MECHANISM = os.environ["AUTH_MECHANISM"]
except KeyError:
    print("[ERROR] Django: Cannot get env settings")
    raise KeyError

if DATABASE == "sqlite":
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }
elif DATABASE == "mongodb":
    if HOST: # For non-local instance
        DATABASES = {
            'default': {
                'ENGINE': 'djongo',
                'NAME': DB_NAME,
                'ENFORCE_SCHEMA': ENFORCE_SCHEMA,
                'CLIENT': {
                    'host': HOST, # host-name or ip address
                    'port': PORT,
                    'username': USERNAME, # DB username
                    'password': PASSWORD, # PASSWORD
                    'authSource': AUTH_SOURCE, # DB name
                    'authMechanism': AUTH_MECHANISM
                },
                'LOGGING': {
                    'version': 1,
                    'loggers': {
                        'djongo': {
                            'level': 'DEBUG',
                            'propagate': False,                        
                        }
                    },
                },
            }
        }
    else: # For mongodb local
        DATABASES = {
            'default': {
                'ENGINE': 'djongo',
                'NAME': DB_NAME,
                'ENFORCE_SCHEMA': ENFORCE_SCHEMA,
                'LOGGING': {
                    'version': 1,
                    'loggers': {
                        'djongo': {
                            'level': 'DEBUG',
                            'propagate': False,                        
                        }
                    },
                },
            }
        }
else:
    print("[ERROR] Django: Invalid database name, %s."%DATABASE)
    raise KeyError
'''
DATABASES= {
	'default':{
	       'ENGINE':'django.db.backends.sqlite3',
	       'NAME': BASE_DIR / 'db.sqlite3',
	}
}




# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT=os.path.join(BASE_DIR,"static/")

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MARKDOWNIFY = {
    "default": {
        "MARKDOWN_EXTENSIONS": [
            'markdown.extensions.fenced_code',
            'markdown.extensions.extra',
            'markdown.extensions.codehilite'
        ],
        "STRIP": False,
        "WHITELIST_TAGS": [
            'a',
            'abbr',
            'acronym',
            'b',
            'blockquote',
            'em',
            'i',
            'li',
            'ol',
            'p',
            'strong',
            'ul',
            'code',
            'span',
            'div', 'class',
            'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',
            'img'
        ],
        "WHITELIST_ATTRS": [
            'href',
            'src',
            'alt',
            'class',
        ],
        "WHITELIST_PROTOCOLS": [
            'http',
            'https',
        ]
    }
}